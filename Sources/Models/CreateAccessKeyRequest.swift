//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class CreateAccessKeyRequest: APIModel {

    /** Name of creator current access key */
    public var createdBy: String?

    /** Friendly name of the access key */
    public var friendlyName: String?

    /** Time to live of the access key */
    public var ttl: Double?

    public init(createdBy: String? = nil, friendlyName: String? = nil, ttl: Double? = nil) {
        self.createdBy = createdBy
        self.friendlyName = friendlyName
        self.ttl = ttl
    }

    private enum CodingKeys: String, CodingKey {
        case createdBy
        case friendlyName
        case ttl
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        createdBy = try container.decodeIfPresent(.createdBy)
        friendlyName = try container.decodeIfPresent(.friendlyName)
        ttl = try container.decodeIfPresent(.ttl)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(createdBy, forKey: .createdBy)
        try container.encodeIfPresent(friendlyName, forKey: .friendlyName)
        try container.encodeIfPresent(ttl, forKey: .ttl)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? CreateAccessKeyRequest else { return false }
      guard self.createdBy == object.createdBy else { return false }
      guard self.friendlyName == object.friendlyName else { return false }
      guard self.ttl == object.ttl else { return false }
      return true
    }

    public static func == (lhs: CreateAccessKeyRequest, rhs: CreateAccessKeyRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
