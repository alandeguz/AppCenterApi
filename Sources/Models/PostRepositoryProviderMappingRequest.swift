//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class PostRepositoryProviderMappingRequest: APIModel {

    /** Supported external providers of source control repositories */
    public enum Provider: String, Codable {
        case github = "github"

        public static let cases: [Provider] = [
          .github,
        ]
    }

    /** Id of user in the external provider service */
    public var externalAccountId: String

    /** Supported external providers of source control repositories */
    public var provider: Provider

    /** App Center account id to link to this provider and external id */
    public var accountId: ID

    public init(externalAccountId: String, provider: Provider, accountId: ID) {
        self.externalAccountId = externalAccountId
        self.provider = provider
        self.accountId = accountId
    }

    private enum CodingKeys: String, CodingKey {
        case externalAccountId = "external_account_id"
        case provider
        case accountId = "account_id"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        externalAccountId = try container.decode(.externalAccountId)
        provider = try container.decode(.provider)
        accountId = try container.decode(.accountId)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(externalAccountId, forKey: .externalAccountId)
        try container.encode(provider, forKey: .provider)
        try container.encode(accountId, forKey: .accountId)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? PostRepositoryProviderMappingRequest else { return false }
      guard self.externalAccountId == object.externalAccountId else { return false }
      guard self.provider == object.provider else { return false }
      guard self.accountId == object.accountId else { return false }
      return true
    }

    public static func == (lhs: PostRepositoryProviderMappingRequest, rhs: PostRepositoryProviderMappingRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
