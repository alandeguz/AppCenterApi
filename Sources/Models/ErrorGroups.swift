//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ErrorGroups: APIModel {

    public var errorGroups: [[String: Any]]?

    public var nextLink: String?

    public init(errorGroups: [[String: Any]]? = nil, nextLink: String? = nil) {
        self.errorGroups = errorGroups
        self.nextLink = nextLink
    }

    private enum CodingKeys: String, CodingKey {
        case errorGroups
        case nextLink
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        errorGroups = try container.decodeAnyIfPresent(.errorGroups)
        nextLink = try container.decodeIfPresent(.nextLink)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeAnyIfPresent(errorGroups, forKey: .errorGroups)
        try container.encodeIfPresent(nextLink, forKey: .nextLink)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ErrorGroups else { return false }
      guard self.errorGroups == object.errorGroups else { return false }
      guard self.nextLink == object.nextLink else { return false }
      return true
    }

    public static func == (lhs: ErrorGroups, rhs: ErrorGroups) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
