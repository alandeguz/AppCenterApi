//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EventCountPerDevice: APIModel {

    public var avgCountPerDevice: Double?

    public var countPerDevice: [CountPerDevice]?

    public var previousAvgCountPerDevice: Double?

    public init(avgCountPerDevice: Double? = nil, countPerDevice: [CountPerDevice]? = nil, previousAvgCountPerDevice: Double? = nil) {
        self.avgCountPerDevice = avgCountPerDevice
        self.countPerDevice = countPerDevice
        self.previousAvgCountPerDevice = previousAvgCountPerDevice
    }

    private enum CodingKeys: String, CodingKey {
        case avgCountPerDevice = "avg_count_per_device"
        case countPerDevice = "count_per_device"
        case previousAvgCountPerDevice = "previous_avg_count_per_device"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        avgCountPerDevice = try container.decodeIfPresent(.avgCountPerDevice)
        countPerDevice = try container.decodeArrayIfPresent(.countPerDevice)
        previousAvgCountPerDevice = try container.decodeIfPresent(.previousAvgCountPerDevice)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(avgCountPerDevice, forKey: .avgCountPerDevice)
        try container.encodeIfPresent(countPerDevice, forKey: .countPerDevice)
        try container.encodeIfPresent(previousAvgCountPerDevice, forKey: .previousAvgCountPerDevice)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EventCountPerDevice else { return false }
      guard self.avgCountPerDevice == object.avgCountPerDevice else { return false }
      guard self.countPerDevice == object.countPerDevice else { return false }
      guard self.previousAvgCountPerDevice == object.previousAvgCountPerDevice else { return false }
      return true
    }

    public static func == (lhs: EventCountPerDevice, rhs: EventCountPerDevice) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
