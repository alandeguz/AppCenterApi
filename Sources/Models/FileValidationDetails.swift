//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Additional details required for file validation */
public class FileValidationDetails: APIModel {

    public var p12password: String

    public var certificateUploadId: String?

    public init(p12password: String, certificateUploadId: String? = nil) {
        self.p12password = p12password
        self.certificateUploadId = certificateUploadId
    }

    private enum CodingKeys: String, CodingKey {
        case p12password
        case certificateUploadId
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        p12password = try container.decode(.p12password)
        certificateUploadId = try container.decodeIfPresent(.certificateUploadId)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(p12password, forKey: .p12password)
        try container.encodeIfPresent(certificateUploadId, forKey: .certificateUploadId)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? FileValidationDetails else { return false }
      guard self.p12password == object.p12password else { return false }
      guard self.certificateUploadId == object.certificateUploadId else { return false }
      return true
    }

    public static func == (lhs: FileValidationDetails, rhs: FileValidationDetails) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
