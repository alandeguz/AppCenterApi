//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Generic export configuration. */
public class ExportConfig: APIModel {

    /** A shared access signature (SAS) URI with Read, Write and Delete permissions on a container. */
    public var blobContainerSasUri: String

    public init(blobContainerSasUri: String) {
        self.blobContainerSasUri = blobContainerSasUri
    }

    private enum CodingKeys: String, CodingKey {
        case blobContainerSasUri = "blob_container_sas_uri"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        blobContainerSasUri = try container.decode(.blobContainerSasUri)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(blobContainerSasUri, forKey: .blobContainerSasUri)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ExportConfig else { return false }
      guard self.blobContainerSasUri == object.blobContainerSasUri else { return false }
      return true
    }

    public static func == (lhs: ExportConfig, rhs: ExportConfig) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
