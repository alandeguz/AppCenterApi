//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class CrashGroupCarriers: APIModel {

    public var carriers: [Carriers]?

    public var crashCount: Int?

    public init(carriers: [Carriers]? = nil, crashCount: Int? = nil) {
        self.carriers = carriers
        self.crashCount = crashCount
    }

    private enum CodingKeys: String, CodingKey {
        case carriers
        case crashCount = "crash_count"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        carriers = try container.decodeArrayIfPresent(.carriers)
        crashCount = try container.decodeIfPresent(.crashCount)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(carriers, forKey: .carriers)
        try container.encodeIfPresent(crashCount, forKey: .crashCount)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? CrashGroupCarriers else { return false }
      guard self.carriers == object.carriers else { return false }
      guard self.crashCount == object.crashCount else { return false }
      return true
    }

    public static func == (lhs: CrashGroupCarriers, rhs: CrashGroupCarriers) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
