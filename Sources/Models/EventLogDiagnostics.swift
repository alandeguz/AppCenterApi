//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Event log. */
public class EventLogDiagnostics: APIModel {

    /** Unique identifier for this event.
 */
    public var id: ID

    /** Name of the event.
 */
    public var name: String

    /** Session ID.
 */
    public var sessionId: ID

    public init(id: ID, name: String, sessionId: ID) {
        self.id = id
        self.name = name
        self.sessionId = sessionId
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case name
        case sessionId = "session_id"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        id = try container.decode(.id)
        name = try container.decode(.name)
        sessionId = try container.decode(.sessionId)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(sessionId, forKey: .sessionId)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EventLogDiagnostics else { return false }
      guard self.id == object.id else { return false }
      guard self.name == object.name else { return false }
      guard self.sessionId == object.sessionId else { return false }
      return true
    }

    public static func == (lhs: EventLogDiagnostics, rhs: EventLogDiagnostics) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
