//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class AppMembershipsResponse: APIModel {

    /** The app's origin */
    public var appOrigin: String?

    /** An array of all ways a user has access to the app, based on the app_memberships table. */
    public var memberships: [Memberships]?

    public init(appOrigin: String? = nil, memberships: [Memberships]? = nil) {
        self.appOrigin = appOrigin
        self.memberships = memberships
    }

    private enum CodingKeys: String, CodingKey {
        case appOrigin = "app_origin"
        case memberships
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        appOrigin = try container.decodeIfPresent(.appOrigin)
        memberships = try container.decodeArrayIfPresent(.memberships)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(appOrigin, forKey: .appOrigin)
        try container.encodeIfPresent(memberships, forKey: .memberships)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? AppMembershipsResponse else { return false }
      guard self.appOrigin == object.appOrigin else { return false }
      guard self.memberships == object.memberships else { return false }
      return true
    }

    public static func == (lhs: AppMembershipsResponse, rhs: AppMembershipsResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
