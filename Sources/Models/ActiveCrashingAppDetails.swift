//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ActiveCrashingAppDetails: APIModel {

    /** details of the apps with crashes */
    public var appsWithCrashes: [AppsWithCrashes]?

    public var nextLink: String?

    public init(appsWithCrashes: [AppsWithCrashes]? = nil, nextLink: String? = nil) {
        self.appsWithCrashes = appsWithCrashes
        self.nextLink = nextLink
    }

    private enum CodingKeys: String, CodingKey {
        case appsWithCrashes
        case nextLink
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        appsWithCrashes = try container.decodeArrayIfPresent(.appsWithCrashes)
        nextLink = try container.decodeIfPresent(.nextLink)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(appsWithCrashes, forKey: .appsWithCrashes)
        try container.encodeIfPresent(nextLink, forKey: .nextLink)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ActiveCrashingAppDetails else { return false }
      guard self.appsWithCrashes == object.appsWithCrashes else { return false }
      guard self.nextLink == object.nextLink else { return false }
      return true
    }

    public static func == (lhs: ActiveCrashingAppDetails, rhs: ActiveCrashingAppDetails) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
