//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** The GitHub Installation */
public class GitHubAccountLite: APIModel {

    /** GitHub Account Id */
    public var id: String?

    /** GitHub Account Login Name */
    public var login: String?

    /** GitHub Account Type */
    public var type: String?

    /** GitHub Account Url */
    public var url: String?

    public init(id: String? = nil, login: String? = nil, type: String? = nil, url: String? = nil) {
        self.id = id
        self.login = login
        self.type = type
        self.url = url
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case login
        case type
        case url
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        id = try container.decodeIfPresent(.id)
        login = try container.decodeIfPresent(.login)
        type = try container.decodeIfPresent(.type)
        url = try container.decodeIfPresent(.url)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(login, forKey: .login)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(url, forKey: .url)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? GitHubAccountLite else { return false }
      guard self.id == object.id else { return false }
      guard self.login == object.login else { return false }
      guard self.type == object.type else { return false }
      guard self.url == object.url else { return false }
      return true
    }

    public static func == (lhs: GitHubAccountLite, rhs: GitHubAccountLite) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
