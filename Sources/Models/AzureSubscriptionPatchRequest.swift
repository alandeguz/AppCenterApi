//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class AzureSubscriptionPatchRequest: APIModel {

    /** If the subscription is used for billing */
    public var isBilling: Bool

    public init(isBilling: Bool) {
        self.isBilling = isBilling
    }

    private enum CodingKeys: String, CodingKey {
        case isBilling = "is_billing"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        isBilling = try container.decode(.isBilling)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(isBilling, forKey: .isBilling)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? AzureSubscriptionPatchRequest else { return false }
      guard self.isBilling == object.isBilling else { return false }
      return true
    }

    public static func == (lhs: AzureSubscriptionPatchRequest, rhs: AzureSubscriptionPatchRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
