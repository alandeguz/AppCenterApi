//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** The owner of a device set */
public class DeviceSetOwner: APIModel {

    /** Type of account */
    public var type: String

    /** Account ID */
    public var id: String

    /** Name of the account */
    public var name: String

    /** Display name of the account */
    public var displayName: String?

    public init(type: String, id: String, name: String, displayName: String? = nil) {
        self.type = type
        self.id = id
        self.name = name
        self.displayName = displayName
    }

    private enum CodingKeys: String, CodingKey {
        case type
        case id
        case name
        case displayName
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        type = try container.decode(.type)
        id = try container.decode(.id)
        name = try container.decode(.name)
        displayName = try container.decodeIfPresent(.displayName)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(type, forKey: .type)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(displayName, forKey: .displayName)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? DeviceSetOwner else { return false }
      guard self.type == object.type else { return false }
      guard self.id == object.id else { return false }
      guard self.name == object.name else { return false }
      guard self.displayName == object.displayName else { return false }
      return true
    }

    public static func == (lhs: DeviceSetOwner, rhs: DeviceSetOwner) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
