//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Shared connection patch request */
public class SharedConnectionPatchRequest: APIModel {

    /** Represents the data for connecting to service */
    public var data: [String: Any]

    /** Display name of the shared connection */
    public var displayName: String?

    public init(data: [String: Any], displayName: String? = nil) {
        self.data = data
        self.displayName = displayName
    }

    private enum CodingKeys: String, CodingKey {
        case data
        case displayName
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        data = try container.decodeAny(.data)
        displayName = try container.decodeIfPresent(.displayName)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeAny(data, forKey: .data)
        try container.encodeIfPresent(displayName, forKey: .displayName)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? SharedConnectionPatchRequest else { return false }
      guard NSDictionary(dictionary: self.data ).isEqual(to: object.data) else { return false }
      guard self.displayName == object.displayName else { return false }
      return true
    }

    public static func == (lhs: SharedConnectionPatchRequest, rhs: SharedConnectionPatchRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
