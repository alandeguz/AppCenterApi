//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class SubscriptionMetrics: APIModel {

    /** The name of the subsciption (prefixed with the topic name) */
    public var name: String

    /** The number of messages in the subscription */
    public var messageCount: Double

    public init(name: String, messageCount: Double) {
        self.name = name
        self.messageCount = messageCount
    }

    private enum CodingKeys: String, CodingKey {
        case name
        case messageCount = "message_count"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        name = try container.decode(.name)
        messageCount = try container.decode(.messageCount)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(name, forKey: .name)
        try container.encode(messageCount, forKey: .messageCount)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? SubscriptionMetrics else { return false }
      guard self.name == object.name else { return false }
      guard self.messageCount == object.messageCount else { return false }
      return true
    }

    public static func == (lhs: SubscriptionMetrics, rhs: SubscriptionMetrics) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
