//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Abstract platform project */
public class ToolsetProject: APIModel {

    public var name: String?

    public var path: String?

    public init(name: String? = nil, path: String? = nil) {
        self.name = name
        self.path = path
    }

    private enum CodingKeys: String, CodingKey {
        case name
        case path
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        name = try container.decodeIfPresent(.name)
        path = try container.decodeIfPresent(.path)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(path, forKey: .path)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ToolsetProject else { return false }
      guard self.name == object.name else { return false }
      guard self.path == object.path else { return false }
      return true
    }

    public static func == (lhs: ToolsetProject, rhs: ToolsetProject) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
