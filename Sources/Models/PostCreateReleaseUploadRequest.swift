//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class PostCreateReleaseUploadRequest: APIModel {

    /** User defined build number */
    public var buildNumber: String?

    /** User defined build version */
    public var buildVersion: String?

    public init(buildNumber: String? = nil, buildVersion: String? = nil) {
        self.buildNumber = buildNumber
        self.buildVersion = buildVersion
    }

    private enum CodingKeys: String, CodingKey {
        case buildNumber = "build_number"
        case buildVersion = "build_version"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        buildNumber = try container.decodeIfPresent(.buildNumber)
        buildVersion = try container.decodeIfPresent(.buildVersion)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(buildNumber, forKey: .buildNumber)
        try container.encodeIfPresent(buildVersion, forKey: .buildVersion)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? PostCreateReleaseUploadRequest else { return false }
      guard self.buildNumber == object.buildNumber else { return false }
      guard self.buildVersion == object.buildVersion else { return false }
      return true
    }

    public static func == (lhs: PostCreateReleaseUploadRequest, rhs: PostCreateReleaseUploadRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
