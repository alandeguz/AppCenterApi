//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class Modules: APIModel {

    public var modules: [String: [String: Bool]]?

    public init(modules: [String: [String: Bool]]? = nil) {
        self.modules = modules
    }

    private enum CodingKeys: String, CodingKey {
        case modules
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        modules = try container.decodeIfPresent(.modules)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(modules, forKey: .modules)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? Modules else { return false }
      guard self.modules == object.modules else { return false }
      return true
    }

    public static func == (lhs: Modules, rhs: Modules) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
