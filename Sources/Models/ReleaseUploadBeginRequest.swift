//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** A request containing information pertaining to begin a release upload process */
public class ReleaseUploadBeginRequest: APIModel {

    /** The build number of the uploaded binary, used with build_version for macOS app support. */
    public var buildNumber: String?

    /** The build version of the uploaded binary, used for macOS, Windows and Custom app support. */
    public var buildVersion: String?

    /** Optional value for explicitly specifying the ID of existing release. */
    public var releaseId: Double?

    public init(buildNumber: String? = nil, buildVersion: String? = nil, releaseId: Double? = nil) {
        self.buildNumber = buildNumber
        self.buildVersion = buildVersion
        self.releaseId = releaseId
    }

    private enum CodingKeys: String, CodingKey {
        case buildNumber = "build_number"
        case buildVersion = "build_version"
        case releaseId = "release_id"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        buildNumber = try container.decodeIfPresent(.buildNumber)
        buildVersion = try container.decodeIfPresent(.buildVersion)
        releaseId = try container.decodeIfPresent(.releaseId)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(buildNumber, forKey: .buildNumber)
        try container.encodeIfPresent(buildVersion, forKey: .buildVersion)
        try container.encodeIfPresent(releaseId, forKey: .releaseId)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ReleaseUploadBeginRequest else { return false }
      guard self.buildNumber == object.buildNumber else { return false }
      guard self.buildVersion == object.buildVersion else { return false }
      guard self.releaseId == object.releaseId else { return false }
      return true
    }

    public static func == (lhs: ReleaseUploadBeginRequest, rhs: ReleaseUploadBeginRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
