//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** missing symbol groups */
public class V2MissingSymbolCrashGroupsInfoResponse: APIModel {

    /** total number of crashes for all missing symbol groups */
    public var totalCrashCount: Int

    public init(totalCrashCount: Int) {
        self.totalCrashCount = totalCrashCount
    }

    private enum CodingKeys: String, CodingKey {
        case totalCrashCount = "total_crash_count"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        totalCrashCount = try container.decode(.totalCrashCount)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(totalCrashCount, forKey: .totalCrashCount)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? V2MissingSymbolCrashGroupsInfoResponse else { return false }
      guard self.totalCrashCount == object.totalCrashCount else { return false }
      return true
    }

    public static func == (lhs: V2MissingSymbolCrashGroupsInfoResponse, rhs: V2MissingSymbolCrashGroupsInfoResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
