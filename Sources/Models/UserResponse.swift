//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class UserResponse: APIModel {

    public var accountId: ID

    public var displayName: String

    public var mail: String?

    public init(accountId: ID, displayName: String, mail: String? = nil) {
        self.accountId = accountId
        self.displayName = displayName
        self.mail = mail
    }

    private enum CodingKeys: String, CodingKey {
        case accountId
        case displayName
        case mail
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        accountId = try container.decode(.accountId)
        displayName = try container.decode(.displayName)
        mail = try container.decodeIfPresent(.mail)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(accountId, forKey: .accountId)
        try container.encode(displayName, forKey: .displayName)
        try container.encodeIfPresent(mail, forKey: .mail)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? UserResponse else { return false }
      guard self.accountId == object.accountId else { return false }
      guard self.displayName == object.displayName else { return false }
      guard self.mail == object.mail else { return false }
      return true
    }

    public static func == (lhs: UserResponse, rhs: UserResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
