//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class RetentionSettings: APIModel {

    public enum RetentionInDays: Int, Codable {
        case _28 = 28
        case _90 = 90

        public static let cases: [RetentionInDays] = [
          ._28,
          ._90,
        ]
    }

    public var retentionInDays: RetentionInDays

    public init(retentionInDays: RetentionInDays) {
        self.retentionInDays = retentionInDays
    }

    private enum CodingKeys: String, CodingKey {
        case retentionInDays = "retention_in_days"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        retentionInDays = try container.decode(.retentionInDays)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(retentionInDays, forKey: .retentionInDays)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? RetentionSettings else { return false }
      guard self.retentionInDays == object.retentionInDays else { return false }
      return true
    }

    public static func == (lhs: RetentionSettings, rhs: RetentionSettings) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
