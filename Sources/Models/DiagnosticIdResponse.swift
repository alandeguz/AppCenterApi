//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** The diagnostic id for the given publish action */
public class DiagnosticIdResponse: APIModel {

    /** diagnostic id */
    public var diagnosticId: String?

    public init(diagnosticId: String? = nil) {
        self.diagnosticId = diagnosticId
    }

    private enum CodingKeys: String, CodingKey {
        case diagnosticId = "diagnostic_id"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        diagnosticId = try container.decodeIfPresent(.diagnosticId)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(diagnosticId, forKey: .diagnosticId)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? DiagnosticIdResponse else { return false }
      guard self.diagnosticId == object.diagnosticId else { return false }
      return true
    }

    public static func == (lhs: DiagnosticIdResponse, rhs: DiagnosticIdResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
