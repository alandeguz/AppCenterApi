//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class CrashCounts: APIModel {

    /** Total crash count. */
    public var count: Int?

    /** The total crash count for day. */
    public var crashes: [Crashes]?

    public init(count: Int? = nil, crashes: [Crashes]? = nil) {
        self.count = count
        self.crashes = crashes
    }

    private enum CodingKeys: String, CodingKey {
        case count
        case crashes
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        count = try container.decodeIfPresent(.count)
        crashes = try container.decodeArrayIfPresent(.crashes)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(count, forKey: .count)
        try container.encodeIfPresent(crashes, forKey: .crashes)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? CrashCounts else { return false }
      guard self.count == object.count else { return false }
      guard self.crashes == object.crashes else { return false }
      return true
    }

    public static func == (lhs: CrashCounts, rhs: CrashCounts) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
