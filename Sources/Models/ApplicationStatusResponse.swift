//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** The status information from Itunes portal */
public class ApplicationStatusResponse: APIModel {

    /** The type of version being returned (production/edit/test flight). */
    public var versionType: String

    /** The version of the application */
    public var version: String?

    public init(versionType: String, version: String? = nil) {
        self.versionType = versionType
        self.version = version
    }

    private enum CodingKeys: String, CodingKey {
        case versionType = "version_type"
        case version
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        versionType = try container.decode(.versionType)
        version = try container.decodeIfPresent(.version)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(versionType, forKey: .versionType)
        try container.encodeIfPresent(version, forKey: .version)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ApplicationStatusResponse else { return false }
      guard self.versionType == object.versionType else { return false }
      guard self.version == object.version else { return false }
      return true
    }

    public static func == (lhs: ApplicationStatusResponse, rhs: ApplicationStatusResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
