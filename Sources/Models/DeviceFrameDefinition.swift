//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class DeviceFrameDefinition: APIModel {

    public var frameUrl: String?

    public var height: Double?

    public var screen: [Double]?

    public var width: Double?

    public init(frameUrl: String? = nil, height: Double? = nil, screen: [Double]? = nil, width: Double? = nil) {
        self.frameUrl = frameUrl
        self.height = height
        self.screen = screen
        self.width = width
    }

    private enum CodingKeys: String, CodingKey {
        case frameUrl
        case height
        case screen
        case width
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        frameUrl = try container.decodeIfPresent(.frameUrl)
        height = try container.decodeIfPresent(.height)
        screen = try container.decodeArrayIfPresent(.screen)
        width = try container.decodeIfPresent(.width)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(frameUrl, forKey: .frameUrl)
        try container.encodeIfPresent(height, forKey: .height)
        try container.encodeIfPresent(screen, forKey: .screen)
        try container.encodeIfPresent(width, forKey: .width)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? DeviceFrameDefinition else { return false }
      guard self.frameUrl == object.frameUrl else { return false }
      guard self.height == object.height else { return false }
      guard self.screen == object.screen else { return false }
      guard self.width == object.width else { return false }
      return true
    }

    public static func == (lhs: DeviceFrameDefinition, rhs: DeviceFrameDefinition) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
