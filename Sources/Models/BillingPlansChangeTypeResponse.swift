//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Responses for requests that detect billing plans change type */
public class BillingPlansChangeTypeResponse: APIModel {

    /** Responses for requests that detect billing plans change type */
    public enum Result: String, Codable {
        case noChange = "NoChange"
        case downgrade = "Downgrade"
        case upgrade = "Upgrade"

        public static let cases: [Result] = [
          .noChange,
          .downgrade,
          .upgrade,
        ]
    }

    public var result: Result?

    public init(result: Result? = nil) {
        self.result = result
    }

    private enum CodingKeys: String, CodingKey {
        case result
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        result = try container.decodeIfPresent(.result)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(result, forKey: .result)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? BillingPlansChangeTypeResponse else { return false }
      guard self.result == object.result else { return false }
      return true
    }

    public static func == (lhs: BillingPlansChangeTypeResponse, rhs: BillingPlansChangeTypeResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
