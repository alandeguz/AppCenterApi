//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ApplicationResponse: APIModel {

    public var createdAt: DateTime?

    public var id: String?

    public var name: String?

    public var signInAudience: String?

    public init(createdAt: DateTime? = nil, id: String? = nil, name: String? = nil, signInAudience: String? = nil) {
        self.createdAt = createdAt
        self.id = id
        self.name = name
        self.signInAudience = signInAudience
    }

    private enum CodingKeys: String, CodingKey {
        case createdAt
        case id
        case name
        case signInAudience
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        createdAt = try container.decodeIfPresent(.createdAt)
        id = try container.decodeIfPresent(.id)
        name = try container.decodeIfPresent(.name)
        signInAudience = try container.decodeIfPresent(.signInAudience)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(signInAudience, forKey: .signInAudience)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ApplicationResponse else { return false }
      guard self.createdAt == object.createdAt else { return false }
      guard self.id == object.id else { return false }
      guard self.name == object.name else { return false }
      guard self.signInAudience == object.signInAudience else { return false }
      return true
    }

    public static func == (lhs: ApplicationResponse, rhs: ApplicationResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
