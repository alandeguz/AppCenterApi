//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** The Api response model for Cosmos Db Cors status */
public class CosmosDbCorsStatusResponse: APIModel {

    /** The Api response model for Cosmos Db Cors status */
    public enum Status: String, Codable {
        case appended = "Appended"
        case hostDbInProgress = "HostDbInProgress"
        case hostDbNotFound = "HostDbNotFound"
        case queued = "Queued"
        case inProgress = "InProgress"
        case notFound = "NotFound"

        public static let cases: [Status] = [
          .appended,
          .hostDbInProgress,
          .hostDbNotFound,
          .queued,
          .inProgress,
          .notFound,
        ]
    }

    public var status: Status

    public var message: String?

    public init(status: Status, message: String? = nil) {
        self.status = status
        self.message = message
    }

    private enum CodingKeys: String, CodingKey {
        case status
        case message
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        status = try container.decode(.status)
        message = try container.decodeIfPresent(.message)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(status, forKey: .status)
        try container.encodeIfPresent(message, forKey: .message)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? CosmosDbCorsStatusResponse else { return false }
      guard self.status == object.status else { return false }
      guard self.message == object.message else { return false }
      return true
    }

    public static func == (lhs: CosmosDbCorsStatusResponse, rhs: CosmosDbCorsStatusResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
