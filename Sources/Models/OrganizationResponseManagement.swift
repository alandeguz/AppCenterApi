//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class OrganizationResponseManagement: APIModel {

    /** The date when the organization was created */
    public var createdAt: String?

    /** The organization email, if the app was synced from HockeyApp */
    public var email: String?

    /** The date when the organization was updated */
    public var updatedAt: String?

    public init(createdAt: String? = nil, email: String? = nil, updatedAt: String? = nil) {
        self.createdAt = createdAt
        self.email = email
        self.updatedAt = updatedAt
    }

    private enum CodingKeys: String, CodingKey {
        case createdAt = "created_at"
        case email
        case updatedAt = "updated_at"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        createdAt = try container.decodeIfPresent(.createdAt)
        email = try container.decodeIfPresent(.email)
        updatedAt = try container.decodeIfPresent(.updatedAt)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(email, forKey: .email)
        try container.encodeIfPresent(updatedAt, forKey: .updatedAt)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? OrganizationResponseManagement else { return false }
      guard self.createdAt == object.createdAt else { return false }
      guard self.email == object.email else { return false }
      guard self.updatedAt == object.updatedAt else { return false }
      return true
    }

    public static func == (lhs: OrganizationResponseManagement, rhs: OrganizationResponseManagement) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
