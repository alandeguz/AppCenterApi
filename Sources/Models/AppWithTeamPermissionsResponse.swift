//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class AppWithTeamPermissionsResponse: APIModel {

    /** The permissions the team has for the app */
    public enum TeamPermissions: String, Codable {
        case manager = "manager"
        case developer = "developer"
        case viewer = "viewer"

        public static let cases: [TeamPermissions] = [
          .manager,
          .developer,
          .viewer,
        ]
    }

    /** The permissions the team has for the app */
    public var teamPermissions: [TeamPermissions]?

    public init(teamPermissions: [TeamPermissions]? = nil) {
        self.teamPermissions = teamPermissions
    }

    private enum CodingKeys: String, CodingKey {
        case teamPermissions = "team_permissions"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        teamPermissions = try container.decodeArrayIfPresent(.teamPermissions)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(teamPermissions, forKey: .teamPermissions)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? AppWithTeamPermissionsResponse else { return false }
      guard self.teamPermissions == object.teamPermissions else { return false }
      return true
    }

    public static func == (lhs: AppWithTeamPermissionsResponse, rhs: AppWithTeamPermissionsResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
