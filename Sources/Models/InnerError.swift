//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class InnerError: APIModel {

    public var code: String?

    public var innererror: InnerError?

    public init(code: String? = nil, innererror: InnerError? = nil) {
        self.code = code
        self.innererror = innererror
    }

    private enum CodingKeys: String, CodingKey {
        case code
        case innererror
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        code = try container.decodeIfPresent(.code)
        innererror = try container.decodeIfPresent(.innererror)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(code, forKey: .code)
        try container.encodeIfPresent(innererror, forKey: .innererror)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? InnerError else { return false }
      guard self.code == object.code else { return false }
      guard self.innererror == object.innererror else { return false }
      return true
    }

    public static func == (lhs: InnerError, rhs: InnerError) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
