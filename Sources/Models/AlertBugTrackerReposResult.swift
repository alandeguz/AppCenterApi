//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** List of bug tracker repositories */
public class AlertBugTrackerReposResult: APIModel {

    public var repositories: [Repositories]

    public var repoType: RepoTypeParameter?

    public init(repositories: [Repositories], repoType: RepoTypeParameter? = nil) {
        self.repositories = repositories
        self.repoType = repoType
    }

    private enum CodingKeys: String, CodingKey {
        case repositories
        case repoType = "repo_type"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        repositories = try container.decodeArray(.repositories)
        repoType = try container.decodeIfPresent(.repoType)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(repositories, forKey: .repositories)
        try container.encodeIfPresent(repoType, forKey: .repoType)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? AlertBugTrackerReposResult else { return false }
      guard self.repositories == object.repositories else { return false }
      guard self.repoType == object.repoType else { return false }
      return true
    }

    public static func == (lhs: AlertBugTrackerReposResult, rhs: AlertBugTrackerReposResult) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
