//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class TeamUserResponse: APIModel {

    /** The email address of the user */
    public var email: String

    /** The full name of the user. Might for example be first and last name */
    public var displayName: String

    /** The unique name that is used to identify the user. */
    public var name: String

    /** The role of the user has within the team */
    public var role: UNKNOWN_ANY

    public init(email: String, displayName: String, name: String, role: UNKNOWN_ANY) {
        self.email = email
        self.displayName = displayName
        self.name = name
        self.role = role
    }

    private enum CodingKeys: String, CodingKey {
        case email
        case displayName = "display_name"
        case name
        case role
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        email = try container.decode(.email)
        displayName = try container.decode(.displayName)
        name = try container.decode(.name)
        role = try container.decode(.role)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(email, forKey: .email)
        try container.encode(displayName, forKey: .displayName)
        try container.encode(name, forKey: .name)
        try container.encode(role, forKey: .role)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? TeamUserResponse else { return false }
      guard self.email == object.email else { return false }
      guard self.displayName == object.displayName else { return false }
      guard self.name == object.name else { return false }
      guard self.role == object.role else { return false }
      return true
    }

    public static func == (lhs: TeamUserResponse, rhs: TeamUserResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
