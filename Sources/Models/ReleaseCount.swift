//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ReleaseCount: APIModel {

    public var releaseId: String

    /** Count of unique downloads against user id.
 */
    public var uniqueCount: Int

    /** Total count of downloads.
 */
    public var totalCount: Int

    /** Distribution group queried.
 */
    public var distributionGroup: String?

    public init(releaseId: String, uniqueCount: Int, totalCount: Int, distributionGroup: String? = nil) {
        self.releaseId = releaseId
        self.uniqueCount = uniqueCount
        self.totalCount = totalCount
        self.distributionGroup = distributionGroup
    }

    private enum CodingKeys: String, CodingKey {
        case releaseId = "release_id"
        case uniqueCount = "unique_count"
        case totalCount = "total_count"
        case distributionGroup = "distribution_group"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        releaseId = try container.decode(.releaseId)
        uniqueCount = try container.decode(.uniqueCount)
        totalCount = try container.decode(.totalCount)
        distributionGroup = try container.decodeIfPresent(.distributionGroup)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(releaseId, forKey: .releaseId)
        try container.encode(uniqueCount, forKey: .uniqueCount)
        try container.encode(totalCount, forKey: .totalCount)
        try container.encodeIfPresent(distributionGroup, forKey: .distributionGroup)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ReleaseCount else { return false }
      guard self.releaseId == object.releaseId else { return false }
      guard self.uniqueCount == object.uniqueCount else { return false }
      guard self.totalCount == object.totalCount else { return false }
      guard self.distributionGroup == object.distributionGroup else { return false }
      return true
    }

    public static func == (lhs: ReleaseCount, rhs: ReleaseCount) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
