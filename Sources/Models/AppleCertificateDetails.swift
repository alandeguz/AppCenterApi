//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Apple Certificate Details */
public class AppleCertificateDetails: APIModel {

    /** The certificate contents in base 64 encoded string */
    public var base64Certificate: String

    /** The password for the certificate */
    public var password: String

    public init(base64Certificate: String, password: String) {
        self.base64Certificate = base64Certificate
        self.password = password
    }

    private enum CodingKeys: String, CodingKey {
        case base64Certificate
        case password
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        base64Certificate = try container.decode(.base64Certificate)
        password = try container.decode(.password)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(base64Certificate, forKey: .base64Certificate)
        try container.encode(password, forKey: .password)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? AppleCertificateDetails else { return false }
      guard self.base64Certificate == object.base64Certificate else { return false }
      guard self.password == object.password else { return false }
      return true
    }

    public static func == (lhs: AppleCertificateDetails, rhs: AppleCertificateDetails) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
