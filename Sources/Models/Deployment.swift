//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class Deployment: APIModel {

    public var name: String

    public var key: String?

    public var latestRelease: UNKNOWN_ALL_OFF?

    public init(name: String, key: String? = nil, latestRelease: UNKNOWN_ALL_OFF? = nil) {
        self.name = name
        self.key = key
        self.latestRelease = latestRelease
    }

    private enum CodingKeys: String, CodingKey {
        case name
        case key
        case latestRelease = "latest_release"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        name = try container.decode(.name)
        key = try container.decodeIfPresent(.key)
        latestRelease = try container.decodeIfPresent(.latestRelease)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(key, forKey: .key)
        try container.encodeIfPresent(latestRelease, forKey: .latestRelease)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? Deployment else { return false }
      guard self.name == object.name else { return false }
      guard self.key == object.key else { return false }
      guard self.latestRelease == object.latestRelease else { return false }
      return true
    }

    public static func == (lhs: Deployment, rhs: Deployment) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
