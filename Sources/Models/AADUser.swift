//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** an AAD user's id and tenant id */
public class AADUser: APIModel {

    /** the aad user's id */
    public var objectId: ID

    /** the aad user's tenant id */
    public var tenantId: ID

    public init(objectId: ID, tenantId: ID) {
        self.objectId = objectId
        self.tenantId = tenantId
    }

    private enum CodingKeys: String, CodingKey {
        case objectId = "object_id"
        case tenantId = "tenant_id"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        objectId = try container.decode(.objectId)
        tenantId = try container.decode(.tenantId)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(objectId, forKey: .objectId)
        try container.encode(tenantId, forKey: .tenantId)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? AADUser else { return false }
      guard self.objectId == object.objectId else { return false }
      guard self.tenantId == object.tenantId else { return false }
      return true
    }

    public static func == (lhs: AADUser, rhs: AADUser) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
