//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class TestGDPRHashFile: APIModel {

    public var filename: String?

    public var id: ID?

    public init(filename: String? = nil, id: ID? = nil) {
        self.filename = filename
        self.id = id
    }

    private enum CodingKeys: String, CodingKey {
        case filename
        case id
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        filename = try container.decodeIfPresent(.filename)
        id = try container.decodeIfPresent(.id)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(filename, forKey: .filename)
        try container.encodeIfPresent(id, forKey: .id)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? TestGDPRHashFile else { return false }
      guard self.filename == object.filename else { return false }
      guard self.id == object.id else { return false }
      return true
    }

    public static func == (lhs: TestGDPRHashFile, rhs: TestGDPRHashFile) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
