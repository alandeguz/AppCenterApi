//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** The information for a single iOS device */
public class PublishDevicesResponse: APIModel {

    /** The updated provisioning profiles zip base64 encoded. */
    public var profilesZipBase64: String

    /** The file name for the provisioning profile. */
    public var profileFileName: String?

    public init(profilesZipBase64: String, profileFileName: String? = nil) {
        self.profilesZipBase64 = profilesZipBase64
        self.profileFileName = profileFileName
    }

    private enum CodingKeys: String, CodingKey {
        case profilesZipBase64 = "profiles_zip_base64"
        case profileFileName = "profile_file_name"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        profilesZipBase64 = try container.decode(.profilesZipBase64)
        profileFileName = try container.decodeIfPresent(.profileFileName)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(profilesZipBase64, forKey: .profilesZipBase64)
        try container.encodeIfPresent(profileFileName, forKey: .profileFileName)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? PublishDevicesResponse else { return false }
      guard self.profilesZipBase64 == object.profilesZipBase64 else { return false }
      guard self.profileFileName == object.profileFileName else { return false }
      return true
    }

    public static func == (lhs: PublishDevicesResponse, rhs: PublishDevicesResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
