//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class StepReport: APIModel {

    public var finishedSnapshots: [String]

    public var deviceScreenshots: [DeviceScreenshots]

    public init(finishedSnapshots: [String], deviceScreenshots: [DeviceScreenshots]) {
        self.finishedSnapshots = finishedSnapshots
        self.deviceScreenshots = deviceScreenshots
    }

    private enum CodingKeys: String, CodingKey {
        case finishedSnapshots
        case deviceScreenshots
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        finishedSnapshots = try container.decodeArray(.finishedSnapshots)
        deviceScreenshots = try container.decodeArray(.deviceScreenshots)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(finishedSnapshots, forKey: .finishedSnapshots)
        try container.encode(deviceScreenshots, forKey: .deviceScreenshots)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? StepReport else { return false }
      guard self.finishedSnapshots == object.finishedSnapshots else { return false }
      guard self.deviceScreenshots == object.deviceScreenshots else { return false }
      return true
    }

    public static func == (lhs: StepReport, rhs: StepReport) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
