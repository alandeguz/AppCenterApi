//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class LogTraceDefinition: APIModel {

    public var appSecret: String

    public var expiration: DateTime?

    public var installId: String?

    public init(appSecret: String, expiration: DateTime? = nil, installId: String? = nil) {
        self.appSecret = appSecret
        self.expiration = expiration
        self.installId = installId
    }

    private enum CodingKeys: String, CodingKey {
        case appSecret = "app_secret"
        case expiration
        case installId = "install_id"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        appSecret = try container.decode(.appSecret)
        expiration = try container.decodeIfPresent(.expiration)
        installId = try container.decodeIfPresent(.installId)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(appSecret, forKey: .appSecret)
        try container.encodeIfPresent(expiration, forKey: .expiration)
        try container.encodeIfPresent(installId, forKey: .installId)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? LogTraceDefinition else { return false }
      guard self.appSecret == object.appSecret else { return false }
      guard self.expiration == object.expiration else { return false }
      guard self.installId == object.installId else { return false }
      return true
    }

    public static func == (lhs: LogTraceDefinition, rhs: LogTraceDefinition) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
