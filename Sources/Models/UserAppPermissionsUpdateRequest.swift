//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class UserAppPermissionsUpdateRequest: APIModel {

    /** The permissions the user has for the app */
    public enum Permissions: String, Codable {
        case manager = "manager"
        case developer = "developer"
        case viewer = "viewer"

        public static let cases: [Permissions] = [
          .manager,
          .developer,
          .viewer,
        ]
    }

    /** The permissions the user has for the app */
    public var permissions: [Permissions]

    public init(permissions: [Permissions]) {
        self.permissions = permissions
    }

    private enum CodingKeys: String, CodingKey {
        case permissions
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        permissions = try container.decodeArray(.permissions)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(permissions, forKey: .permissions)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? UserAppPermissionsUpdateRequest else { return false }
      guard self.permissions == object.permissions else { return false }
      return true
    }

    public static func == (lhs: UserAppPermissionsUpdateRequest, rhs: UserAppPermissionsUpdateRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
