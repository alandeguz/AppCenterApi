//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class TeamAppResponse: APIModel {

    /** The internal unique id (UUID) of the team. */
    public var id: ID

    /** The name of the team */
    public var name: String

    /** The display name of the team */
    public var displayName: String

    /** The description of the team */
    public var description: String?

    public init(id: ID, name: String, displayName: String, description: String? = nil) {
        self.id = id
        self.name = name
        self.displayName = displayName
        self.description = description
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case name
        case displayName = "display_name"
        case description
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        id = try container.decode(.id)
        name = try container.decode(.name)
        displayName = try container.decode(.displayName)
        description = try container.decodeIfPresent(.description)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(displayName, forKey: .displayName)
        try container.encodeIfPresent(description, forKey: .description)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? TeamAppResponse else { return false }
      guard self.id == object.id else { return false }
      guard self.name == object.name else { return false }
      guard self.displayName == object.displayName else { return false }
      guard self.description == object.description else { return false }
      return true
    }

    public static func == (lhs: TeamAppResponse, rhs: TeamAppResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
