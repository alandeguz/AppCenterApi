//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class CrashOverall: APIModel {

    public var crashCount: Int?

    public var deviceCount: Int?

    public init(crashCount: Int? = nil, deviceCount: Int? = nil) {
        self.crashCount = crashCount
        self.deviceCount = deviceCount
    }

    private enum CodingKeys: String, CodingKey {
        case crashCount = "crash_count"
        case deviceCount = "device_count"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        crashCount = try container.decodeIfPresent(.crashCount)
        deviceCount = try container.decodeIfPresent(.deviceCount)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(crashCount, forKey: .crashCount)
        try container.encodeIfPresent(deviceCount, forKey: .deviceCount)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? CrashOverall else { return false }
      guard self.crashCount == object.crashCount else { return false }
      guard self.deviceCount == object.deviceCount else { return false }
      return true
    }

    public static func == (lhs: CrashOverall, rhs: CrashOverall) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
