//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** A response containing the fully encoded binary blob for a mobileconfig */
public class DeviceConfigurationResponse: APIModel {

    /** A data URL containing a signed mobileconfig profile */
    public var dataURL: String

    public init(dataURL: String) {
        self.dataURL = dataURL
    }

    private enum CodingKeys: String, CodingKey {
        case dataURL = "data_url"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        dataURL = try container.decode(.dataURL)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(dataURL, forKey: .dataURL)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? DeviceConfigurationResponse else { return false }
      guard self.dataURL == object.dataURL else { return false }
      return true
    }

    public static func == (lhs: DeviceConfigurationResponse, rhs: DeviceConfigurationResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
