//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class CrashGroupPlace: APIModel {

    /** Count of places. */
    public var crashCount: Int?

    /** Place name. */
    public var placeName: String?

    public init(crashCount: Int? = nil, placeName: String? = nil) {
        self.crashCount = crashCount
        self.placeName = placeName
    }

    private enum CodingKeys: String, CodingKey {
        case crashCount = "crash_count"
        case placeName = "place_name"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        crashCount = try container.decodeIfPresent(.crashCount)
        placeName = try container.decodeIfPresent(.placeName)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(crashCount, forKey: .crashCount)
        try container.encodeIfPresent(placeName, forKey: .placeName)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? CrashGroupPlace else { return false }
      guard self.crashCount == object.crashCount else { return false }
      guard self.placeName == object.placeName else { return false }
      return true
    }

    public static func == (lhs: CrashGroupPlace, rhs: CrashGroupPlace) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
