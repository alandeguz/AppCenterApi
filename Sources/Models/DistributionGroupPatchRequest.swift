//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class DistributionGroupPatchRequest: APIModel {

    /** Whether the distribution group is public */
    public var isPublic: Bool?

    /** The name of the distribution group */
    public var name: String?

    public init(isPublic: Bool? = nil, name: String? = nil) {
        self.isPublic = isPublic
        self.name = name
    }

    private enum CodingKeys: String, CodingKey {
        case isPublic = "is_public"
        case name
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        isPublic = try container.decodeIfPresent(.isPublic)
        name = try container.decodeIfPresent(.name)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(isPublic, forKey: .isPublic)
        try container.encodeIfPresent(name, forKey: .name)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? DistributionGroupPatchRequest else { return false }
      guard self.isPublic == object.isPublic else { return false }
      guard self.name == object.name else { return false }
      return true
    }

    public static func == (lhs: DistributionGroupPatchRequest, rhs: DistributionGroupPatchRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
