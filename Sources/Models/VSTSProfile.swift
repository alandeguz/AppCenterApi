//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** VSTS user profile */
public class VSTSProfile: APIModel {

    /** Profile display name */
    public var displayName: String?

    /** Profile email */
    public var emailAddress: String?

    /** Profile id */
    public var id: String?

    /** Profile alias */
    public var publicAlias: String?

    public init(displayName: String? = nil, emailAddress: String? = nil, id: String? = nil, publicAlias: String? = nil) {
        self.displayName = displayName
        self.emailAddress = emailAddress
        self.id = id
        self.publicAlias = publicAlias
    }

    private enum CodingKeys: String, CodingKey {
        case displayName
        case emailAddress
        case id
        case publicAlias
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        displayName = try container.decodeIfPresent(.displayName)
        emailAddress = try container.decodeIfPresent(.emailAddress)
        id = try container.decodeIfPresent(.id)
        publicAlias = try container.decodeIfPresent(.publicAlias)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(displayName, forKey: .displayName)
        try container.encodeIfPresent(emailAddress, forKey: .emailAddress)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(publicAlias, forKey: .publicAlias)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? VSTSProfile else { return false }
      guard self.displayName == object.displayName else { return false }
      guard self.emailAddress == object.emailAddress else { return false }
      guard self.id == object.id else { return false }
      guard self.publicAlias == object.publicAlias else { return false }
      return true
    }

    public static func == (lhs: VSTSProfile, rhs: VSTSProfile) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
