//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ErrorDateTimePercentages: APIModel {

    /** the ISO 8601 datetime */
    public var datetime: String?

    /** percentage of the object */
    public var percentage: Double?

    public init(datetime: String? = nil, percentage: Double? = nil) {
        self.datetime = datetime
        self.percentage = percentage
    }

    private enum CodingKeys: String, CodingKey {
        case datetime
        case percentage
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        datetime = try container.decodeIfPresent(.datetime)
        percentage = try container.decodeIfPresent(.percentage)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(datetime, forKey: .datetime)
        try container.encodeIfPresent(percentage, forKey: .percentage)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ErrorDateTimePercentages else { return false }
      guard self.datetime == object.datetime else { return false }
      guard self.percentage == object.percentage else { return false }
      return true
    }

    public static func == (lhs: ErrorDateTimePercentages, rhs: ErrorDateTimePercentages) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
