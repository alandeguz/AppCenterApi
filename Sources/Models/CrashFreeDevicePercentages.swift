//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class CrashFreeDevicePercentages: APIModel {

    /** Average percentage. */
    public var averagePercentage: Double?

    /** The crash-free percentage per day. */
    public var dailyPercentages: [DailyPercentages]?

    public init(averagePercentage: Double? = nil, dailyPercentages: [DailyPercentages]? = nil) {
        self.averagePercentage = averagePercentage
        self.dailyPercentages = dailyPercentages
    }

    private enum CodingKeys: String, CodingKey {
        case averagePercentage = "average_percentage"
        case dailyPercentages = "daily_percentages"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        averagePercentage = try container.decodeIfPresent(.averagePercentage)
        dailyPercentages = try container.decodeArrayIfPresent(.dailyPercentages)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(averagePercentage, forKey: .averagePercentage)
        try container.encodeIfPresent(dailyPercentages, forKey: .dailyPercentages)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? CrashFreeDevicePercentages else { return false }
      guard self.averagePercentage == object.averagePercentage else { return false }
      guard self.dailyPercentages == object.dailyPercentages else { return false }
      return true
    }

    public static func == (lhs: CrashFreeDevicePercentages, rhs: CrashFreeDevicePercentages) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
