//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Itunes teams details . */
public class AllItunesAppsResponse: APIModel {

    /** apple id for app team id. */
    public var appleId: String?

    /** bundle identifier of app */
    public var bundleId: String?

    /** url for the app icon from app store */
    public var iconUrl: String?

    /** App Name */
    public var name: String?

    public init(appleId: String? = nil, bundleId: String? = nil, iconUrl: String? = nil, name: String? = nil) {
        self.appleId = appleId
        self.bundleId = bundleId
        self.iconUrl = iconUrl
        self.name = name
    }

    private enum CodingKeys: String, CodingKey {
        case appleId = "apple_id"
        case bundleId = "bundle_id"
        case iconUrl
        case name
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        appleId = try container.decodeIfPresent(.appleId)
        bundleId = try container.decodeIfPresent(.bundleId)
        iconUrl = try container.decodeIfPresent(.iconUrl)
        name = try container.decodeIfPresent(.name)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(appleId, forKey: .appleId)
        try container.encodeIfPresent(bundleId, forKey: .bundleId)
        try container.encodeIfPresent(iconUrl, forKey: .iconUrl)
        try container.encodeIfPresent(name, forKey: .name)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? AllItunesAppsResponse else { return false }
      guard self.appleId == object.appleId else { return false }
      guard self.bundleId == object.bundleId else { return false }
      guard self.iconUrl == object.iconUrl else { return false }
      guard self.name == object.name else { return false }
      return true
    }

    public static func == (lhs: AllItunesAppsResponse, rhs: AllItunesAppsResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
