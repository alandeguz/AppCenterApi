//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** An object containing all the release metadata. */
public class ReleaseMetadata: APIModel {

    /** dsa signature of the release for the sparkle feed. */
    public var dsaSignature: String?

    public init(dsaSignature: String? = nil) {
        self.dsaSignature = dsaSignature
    }

    private enum CodingKeys: String, CodingKey {
        case dsaSignature = "dsa_signature"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        dsaSignature = try container.decodeIfPresent(.dsaSignature)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(dsaSignature, forKey: .dsaSignature)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ReleaseMetadata else { return false }
      guard self.dsaSignature == object.dsaSignature else { return false }
      return true
    }

    public static func == (lhs: ReleaseMetadata, rhs: ReleaseMetadata) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
