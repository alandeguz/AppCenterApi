//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** A request containing information for creating an externally hosted release. */
public class ExternallyHostedReleaseCreateRequest: APIModel {

    /** The build version of the uploaded binary */
    public var buildVersion: String

    /** The external URL to the release's binary. */
    public var externalDownloadURL: String

    /** The build number of the uploaded binary */
    public var buildNumber: String?

    public init(buildVersion: String, externalDownloadURL: String, buildNumber: String? = nil) {
        self.buildVersion = buildVersion
        self.externalDownloadURL = externalDownloadURL
        self.buildNumber = buildNumber
    }

    private enum CodingKeys: String, CodingKey {
        case buildVersion = "build_version"
        case externalDownloadURL = "external_download_url"
        case buildNumber = "build_number"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        buildVersion = try container.decode(.buildVersion)
        externalDownloadURL = try container.decode(.externalDownloadURL)
        buildNumber = try container.decodeIfPresent(.buildNumber)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(buildVersion, forKey: .buildVersion)
        try container.encode(externalDownloadURL, forKey: .externalDownloadURL)
        try container.encodeIfPresent(buildNumber, forKey: .buildNumber)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ExternallyHostedReleaseCreateRequest else { return false }
      guard self.buildVersion == object.buildVersion else { return false }
      guard self.externalDownloadURL == object.externalDownloadURL else { return false }
      guard self.buildNumber == object.buildNumber else { return false }
      return true
    }

    public static func == (lhs: ExternallyHostedReleaseCreateRequest, rhs: ExternallyHostedReleaseCreateRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
