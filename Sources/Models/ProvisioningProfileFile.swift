//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Provisioning profile fetch and store information */
public class ProvisioningProfileFile: APIModel {

    /** File id from secure file storage */
    public var fileId: String?

    /** Name of uploaded provisioning profile */
    public var fileName: String?

    /** Target the provisioning profile is used to sign */
    public var targetBundleIdentifier: String?

    /** Upload id to App Center File Upload Store */
    public var uploadId: String?

    public init(fileId: String? = nil, fileName: String? = nil, targetBundleIdentifier: String? = nil, uploadId: String? = nil) {
        self.fileId = fileId
        self.fileName = fileName
        self.targetBundleIdentifier = targetBundleIdentifier
        self.uploadId = uploadId
    }

    private enum CodingKeys: String, CodingKey {
        case fileId
        case fileName
        case targetBundleIdentifier
        case uploadId
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        fileId = try container.decodeIfPresent(.fileId)
        fileName = try container.decodeIfPresent(.fileName)
        targetBundleIdentifier = try container.decodeIfPresent(.targetBundleIdentifier)
        uploadId = try container.decodeIfPresent(.uploadId)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(fileId, forKey: .fileId)
        try container.encodeIfPresent(fileName, forKey: .fileName)
        try container.encodeIfPresent(targetBundleIdentifier, forKey: .targetBundleIdentifier)
        try container.encodeIfPresent(uploadId, forKey: .uploadId)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ProvisioningProfileFile else { return false }
      guard self.fileId == object.fileId else { return false }
      guard self.fileName == object.fileName else { return false }
      guard self.targetBundleIdentifier == object.targetBundleIdentifier else { return false }
      guard self.uploadId == object.uploadId else { return false }
      return true
    }

    public static func == (lhs: ProvisioningProfileFile, rhs: ProvisioningProfileFile) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
