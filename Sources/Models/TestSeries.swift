//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Summary of a single test series */
public class TestSeries: APIModel {

    /** Unique, human-readable identifier of the test series */
    public var slug: String

    /** Name of the test series */
    public var name: String

    /** Date of the latest test run that used this test series */
    public var mostRecentActivity: String?

    /** Most recent test runs */
    public var testRuns: [TestRuns]?

    public init(slug: String, name: String, mostRecentActivity: String? = nil, testRuns: [TestRuns]? = nil) {
        self.slug = slug
        self.name = name
        self.mostRecentActivity = mostRecentActivity
        self.testRuns = testRuns
    }

    private enum CodingKeys: String, CodingKey {
        case slug
        case name
        case mostRecentActivity
        case testRuns
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        slug = try container.decode(.slug)
        name = try container.decode(.name)
        mostRecentActivity = try container.decodeIfPresent(.mostRecentActivity)
        testRuns = try container.decodeArrayIfPresent(.testRuns)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(slug, forKey: .slug)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(mostRecentActivity, forKey: .mostRecentActivity)
        try container.encodeIfPresent(testRuns, forKey: .testRuns)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? TestSeries else { return false }
      guard self.slug == object.slug else { return false }
      guard self.name == object.name else { return false }
      guard self.mostRecentActivity == object.mostRecentActivity else { return false }
      guard self.testRuns == object.testRuns else { return false }
      return true
    }

    public static func == (lhs: TestSeries, rhs: TestSeries) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
