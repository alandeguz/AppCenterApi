//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Contains the token ID for a bug tracker */
public class BugTrackerTokenId: APIModel {

    public var tokenId: String?

    public init(tokenId: String? = nil) {
        self.tokenId = tokenId
    }

    private enum CodingKeys: String, CodingKey {
        case tokenId = "token_id"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        tokenId = try container.decodeIfPresent(.tokenId)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(tokenId, forKey: .tokenId)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? BugTrackerTokenId else { return false }
      guard self.tokenId == object.tokenId else { return false }
      return true
    }

    public static func == (lhs: BugTrackerTokenId, rhs: BugTrackerTokenId) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
