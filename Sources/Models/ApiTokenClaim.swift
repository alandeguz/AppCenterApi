//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ApiTokenClaim: APIModel {

    public enum ClaimType: String, Codable {
        case userEmail = "user_email"
        case userOrigin = "user_origin"
        case appOwnerName = "app_owner_name"
        case appName = "app_name"

        public static let cases: [ClaimType] = [
          .userEmail,
          .userOrigin,
          .appOwnerName,
          .appName,
        ]
    }

    public var claimType: ClaimType?

    public var claimValue: String?

    public init(claimType: ClaimType? = nil, claimValue: String? = nil) {
        self.claimType = claimType
        self.claimValue = claimValue
    }

    private enum CodingKeys: String, CodingKey {
        case claimType = "claim_type"
        case claimValue = "claim_value"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        claimType = try container.decodeIfPresent(.claimType)
        claimValue = try container.decodeIfPresent(.claimValue)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(claimType, forKey: .claimType)
        try container.encodeIfPresent(claimValue, forKey: .claimValue)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ApiTokenClaim else { return false }
      guard self.claimType == object.claimType else { return false }
      guard self.claimValue == object.claimValue else { return false }
      return true
    }

    public static func == (lhs: ApiTokenClaim, rhs: ApiTokenClaim) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
