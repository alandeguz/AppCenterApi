//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class AADGroupUserSyncRequest: APIModel {

    /** role */
    public enum Role: String, Codable {
        case admin = "admin"
        case collaborator = "collaborator"
        case member = "member"

        public static let cases: [Role] = [
          .admin,
          .collaborator,
          .member,
        ]
    }

    /** user id */
    public var userId: ID

    /** The appcenter AAD group id */
    public var aadGroupId: ID

    /** role */
    public var role: Role

    public init(userId: ID, aadGroupId: ID, role: Role) {
        self.userId = userId
        self.aadGroupId = aadGroupId
        self.role = role
    }

    private enum CodingKeys: String, CodingKey {
        case userId = "user_id"
        case aadGroupId = "aad_group_id"
        case role
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        userId = try container.decode(.userId)
        aadGroupId = try container.decode(.aadGroupId)
        role = try container.decode(.role)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(userId, forKey: .userId)
        try container.encode(aadGroupId, forKey: .aadGroupId)
        try container.encode(role, forKey: .role)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? AADGroupUserSyncRequest else { return false }
      guard self.userId == object.userId else { return false }
      guard self.aadGroupId == object.aadGroupId else { return false }
      guard self.role == object.role else { return false }
      return true
    }

    public static func == (lhs: AADGroupUserSyncRequest, rhs: AADGroupUserSyncRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
