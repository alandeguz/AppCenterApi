//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ResetPasswordUsingTokenRequest: APIModel {

    /** The reset password token that was sent to the user */
    public var token: String

    /** The new password. Needs to be at least 8 characters long and contain at least one lower- and one uppercase letter. */
    public var newPassword: String

    public init(token: String, newPassword: String) {
        self.token = token
        self.newPassword = newPassword
    }

    private enum CodingKeys: String, CodingKey {
        case token
        case newPassword = "new_password"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        token = try container.decode(.token)
        newPassword = try container.decode(.newPassword)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(token, forKey: .token)
        try container.encode(newPassword, forKey: .newPassword)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ResetPasswordUsingTokenRequest else { return false }
      guard self.token == object.token else { return false }
      guard self.newPassword == object.newPassword else { return false }
      return true
    }

    public static func == (lhs: ResetPasswordUsingTokenRequest, rhs: ResetPasswordUsingTokenRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
