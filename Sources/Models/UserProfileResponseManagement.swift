//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class UserProfileResponseManagement: APIModel {

    /** The identity providers associated with the user's account */
    public var identityProviders: [IdentityProviders]?

    /** The date when the app was last updated */
    public var updatedAt: String?

    /** A boolean flag that indicates if the user is already verified */
    public var verified: Bool?

    public init(identityProviders: [IdentityProviders]? = nil, updatedAt: String? = nil, verified: Bool? = nil) {
        self.identityProviders = identityProviders
        self.updatedAt = updatedAt
        self.verified = verified
    }

    private enum CodingKeys: String, CodingKey {
        case identityProviders = "identity_providers"
        case updatedAt = "updated_at"
        case verified
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        identityProviders = try container.decodeArrayIfPresent(.identityProviders)
        updatedAt = try container.decodeIfPresent(.updatedAt)
        verified = try container.decodeIfPresent(.verified)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(identityProviders, forKey: .identityProviders)
        try container.encodeIfPresent(updatedAt, forKey: .updatedAt)
        try container.encodeIfPresent(verified, forKey: .verified)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? UserProfileResponseManagement else { return false }
      guard self.identityProviders == object.identityProviders else { return false }
      guard self.updatedAt == object.updatedAt else { return false }
      guard self.verified == object.verified else { return false }
      return true
    }

    public static func == (lhs: UserProfileResponseManagement, rhs: UserProfileResponseManagement) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
