//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Event property value counts during the time range in descending order. */
public class EventPropertyValues: APIModel {

    /** The total property value counts. */
    public var total: Int?

    /** The event property values. */
    public var values: [Values]?

    public init(total: Int? = nil, values: [Values]? = nil) {
        self.total = total
        self.values = values
    }

    private enum CodingKeys: String, CodingKey {
        case total
        case values
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        total = try container.decodeIfPresent(.total)
        values = try container.decodeArrayIfPresent(.values)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(total, forKey: .total)
        try container.encodeIfPresent(values, forKey: .values)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EventPropertyValues else { return false }
      guard self.total == object.total else { return false }
      guard self.values == object.values else { return false }
      return true
    }

    public static func == (lhs: EventPropertyValues, rhs: EventPropertyValues) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
