//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class DataSubjectRightResponse: APIModel {

    /** Unique request identifier */
    public var token: ID

    /** ISO 8601 format timestamp of when request was created. */
    public var createdAt: DateTime

    public init(token: ID, createdAt: DateTime) {
        self.token = token
        self.createdAt = createdAt
    }

    private enum CodingKeys: String, CodingKey {
        case token
        case createdAt
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        token = try container.decode(.token)
        createdAt = try container.decode(.createdAt)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(token, forKey: .token)
        try container.encode(createdAt, forKey: .createdAt)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? DataSubjectRightResponse else { return false }
      guard self.token == object.token else { return false }
      guard self.createdAt == object.createdAt else { return false }
      return true
    }

    public static func == (lhs: DataSubjectRightResponse, rhs: DataSubjectRightResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
