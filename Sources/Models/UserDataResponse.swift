//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class UserDataResponse: APIModel {

    /** The url at which the user's avatar can be reached */
    public var avatarURL: String?

    /** The display name of the user */
    public var displayName: String?

    /** The unique id (UUID) of the user */
    public var id: ID?

    /** The name of the user */
    public var name: String?

    public init(avatarURL: String? = nil, displayName: String? = nil, id: ID? = nil, name: String? = nil) {
        self.avatarURL = avatarURL
        self.displayName = displayName
        self.id = id
        self.name = name
    }

    private enum CodingKeys: String, CodingKey {
        case avatarURL = "avatar_url"
        case displayName = "display_name"
        case id
        case name
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        avatarURL = try container.decodeIfPresent(.avatarURL)
        displayName = try container.decodeIfPresent(.displayName)
        id = try container.decodeIfPresent(.id)
        name = try container.decodeIfPresent(.name)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(avatarURL, forKey: .avatarURL)
        try container.encodeIfPresent(displayName, forKey: .displayName)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? UserDataResponse else { return false }
      guard self.avatarURL == object.avatarURL else { return false }
      guard self.displayName == object.displayName else { return false }
      guard self.id == object.id else { return false }
      guard self.name == object.name else { return false }
      return true
    }

    public static func == (lhs: UserDataResponse, rhs: UserDataResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
