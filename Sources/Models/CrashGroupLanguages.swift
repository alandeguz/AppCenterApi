//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class CrashGroupLanguages: APIModel {

    public var crashCount: Int?

    public var languages: [Languages]?

    public init(crashCount: Int? = nil, languages: [Languages]? = nil) {
        self.crashCount = crashCount
        self.languages = languages
    }

    private enum CodingKeys: String, CodingKey {
        case crashCount = "crash_count"
        case languages
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        crashCount = try container.decodeIfPresent(.crashCount)
        languages = try container.decodeArrayIfPresent(.languages)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(crashCount, forKey: .crashCount)
        try container.encodeIfPresent(languages, forKey: .languages)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? CrashGroupLanguages else { return false }
      guard self.crashCount == object.crashCount else { return false }
      guard self.languages == object.languages else { return false }
      return true
    }

    public static func == (lhs: CrashGroupLanguages, rhs: CrashGroupLanguages) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
