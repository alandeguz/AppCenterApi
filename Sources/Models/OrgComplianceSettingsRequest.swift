//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** org settings Request */
public class OrgComplianceSettingsRequest: APIModel {

    /** certificate connection id to wrap and resign the app after wrapping */
    public var certificateConnectionId: String

    public init(certificateConnectionId: String) {
        self.certificateConnectionId = certificateConnectionId
    }

    private enum CodingKeys: String, CodingKey {
        case certificateConnectionId = "certificate_connection_id"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        certificateConnectionId = try container.decode(.certificateConnectionId)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(certificateConnectionId, forKey: .certificateConnectionId)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? OrgComplianceSettingsRequest else { return false }
      guard self.certificateConnectionId == object.certificateConnectionId else { return false }
      return true
    }

    public static func == (lhs: OrgComplianceSettingsRequest, rhs: OrgComplianceSettingsRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
