//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Queue configured in build definition */
public class BuildAgentQueueResponse: APIModel {

    /** Name of the build definition */
    public var buildDefinition: String?

    /** Name of the queue */
    public var name: String?

    public init(buildDefinition: String? = nil, name: String? = nil) {
        self.buildDefinition = buildDefinition
        self.name = name
    }

    private enum CodingKeys: String, CodingKey {
        case buildDefinition
        case name
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        buildDefinition = try container.decodeIfPresent(.buildDefinition)
        name = try container.decodeIfPresent(.name)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(buildDefinition, forKey: .buildDefinition)
        try container.encodeIfPresent(name, forKey: .name)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? BuildAgentQueueResponse else { return false }
      guard self.buildDefinition == object.buildDefinition else { return false }
      guard self.name == object.name else { return false }
      return true
    }

    public static func == (lhs: BuildAgentQueueResponse, rhs: BuildAgentQueueResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
