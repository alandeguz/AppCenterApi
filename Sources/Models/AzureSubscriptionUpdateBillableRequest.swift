//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class AzureSubscriptionUpdateBillableRequest: APIModel {

    /** Billable status of the subscription */
    public var isBillable: Bool

    public init(isBillable: Bool) {
        self.isBillable = isBillable
    }

    private enum CodingKeys: String, CodingKey {
        case isBillable = "is_billable"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        isBillable = try container.decode(.isBillable)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(isBillable, forKey: .isBillable)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? AzureSubscriptionUpdateBillableRequest else { return false }
      guard self.isBillable == object.isBillable else { return false }
      return true
    }

    public static func == (lhs: AzureSubscriptionUpdateBillableRequest, rhs: AzureSubscriptionUpdateBillableRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
