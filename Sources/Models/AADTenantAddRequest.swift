//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class AADTenantAddRequest: APIModel {

    /** The user wanting to add this tenant to the organization, must be an admin of the organization */
    public var userId: ID

    /** The AAD tenant id */
    public var aadTenantId: ID

    /** The name of the AAD Tenant */
    public var displayName: String

    public init(userId: ID, aadTenantId: ID, displayName: String) {
        self.userId = userId
        self.aadTenantId = aadTenantId
        self.displayName = displayName
    }

    private enum CodingKeys: String, CodingKey {
        case userId = "user_id"
        case aadTenantId = "aad_tenant_id"
        case displayName = "display_name"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        userId = try container.decode(.userId)
        aadTenantId = try container.decode(.aadTenantId)
        displayName = try container.decode(.displayName)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(userId, forKey: .userId)
        try container.encode(aadTenantId, forKey: .aadTenantId)
        try container.encode(displayName, forKey: .displayName)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? AADTenantAddRequest else { return false }
      guard self.userId == object.userId else { return false }
      guard self.aadTenantId == object.aadTenantId else { return false }
      guard self.displayName == object.displayName else { return false }
      return true
    }

    public static func == (lhs: AADTenantAddRequest, rhs: AADTenantAddRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
