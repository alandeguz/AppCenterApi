//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class MetricsData: APIModel {

    public var average: Float?

    public var timestamp: DateTime?

    public init(average: Float? = nil, timestamp: DateTime? = nil) {
        self.average = average
        self.timestamp = timestamp
    }

    private enum CodingKeys: String, CodingKey {
        case average
        case timestamp
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        average = try container.decodeIfPresent(.average)
        timestamp = try container.decodeIfPresent(.timestamp)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(average, forKey: .average)
        try container.encodeIfPresent(timestamp, forKey: .timestamp)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? MetricsData else { return false }
      guard self.average == object.average else { return false }
      guard self.timestamp == object.timestamp else { return false }
      return true
    }

    public static func == (lhs: MetricsData, rhs: MetricsData) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
