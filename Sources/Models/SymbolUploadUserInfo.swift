//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class SymbolUploadUserInfo: APIModel {

    /** The full name of the user. Might for example be first and last name */
    public var displayName: String?

    /** The email of the user */
    public var email: String?

    public init(displayName: String? = nil, email: String? = nil) {
        self.displayName = displayName
        self.email = email
    }

    private enum CodingKeys: String, CodingKey {
        case displayName = "display_name"
        case email
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        displayName = try container.decodeIfPresent(.displayName)
        email = try container.decodeIfPresent(.email)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(displayName, forKey: .displayName)
        try container.encodeIfPresent(email, forKey: .email)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? SymbolUploadUserInfo else { return false }
      guard self.displayName == object.displayName else { return false }
      guard self.email == object.email else { return false }
      return true
    }

    public static func == (lhs: SymbolUploadUserInfo, rhs: SymbolUploadUserInfo) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
