//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class BuildParams: APIModel {

    /** Run build in debug mode */
    public var debug: Bool?

    /** Version to build which represents the full Git commit reference */
    public var sourceVersion: String?

    public init(debug: Bool? = nil, sourceVersion: String? = nil) {
        self.debug = debug
        self.sourceVersion = sourceVersion
    }

    private enum CodingKeys: String, CodingKey {
        case debug
        case sourceVersion
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        debug = try container.decodeIfPresent(.debug)
        sourceVersion = try container.decodeIfPresent(.sourceVersion)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(debug, forKey: .debug)
        try container.encodeIfPresent(sourceVersion, forKey: .sourceVersion)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? BuildParams else { return false }
      guard self.debug == object.debug else { return false }
      guard self.sourceVersion == object.sourceVersion else { return false }
      return true
    }

    public static func == (lhs: BuildParams, rhs: BuildParams) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
