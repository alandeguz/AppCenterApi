//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** URL that can be used to check the status of the update devices operation and the updated profiles. */
public class UpdateResignStatusResponse: APIModel {

    /** The status. */
    public var status: String

    /** A zip of the updated provisioning profiles. Base64 encoded. */
    public var profilesZipBase64: String?

    public init(status: String, profilesZipBase64: String? = nil) {
        self.status = status
        self.profilesZipBase64 = profilesZipBase64
    }

    private enum CodingKeys: String, CodingKey {
        case status
        case profilesZipBase64 = "profiles_zip_base64"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        status = try container.decode(.status)
        profilesZipBase64 = try container.decodeIfPresent(.profilesZipBase64)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(status, forKey: .status)
        try container.encodeIfPresent(profilesZipBase64, forKey: .profilesZipBase64)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? UpdateResignStatusResponse else { return false }
      guard self.status == object.status else { return false }
      guard self.profilesZipBase64 == object.profilesZipBase64 else { return false }
      return true
    }

    public static func == (lhs: UpdateResignStatusResponse, rhs: UpdateResignStatusResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
