//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class LegacyCodePushApp: APIModel {

    /** The app name. */
    public var name: String

    /** Whether the user provided their own deployments. Not currently in use. */
    public var manuallyProvisionDeployments: Bool?

    /** The app os. */
    public var os: String?

    /** The app platform. */
    public var platform: String?

    public init(name: String, manuallyProvisionDeployments: Bool? = nil, os: String? = nil, platform: String? = nil) {
        self.name = name
        self.manuallyProvisionDeployments = manuallyProvisionDeployments
        self.os = os
        self.platform = platform
    }

    private enum CodingKeys: String, CodingKey {
        case name
        case manuallyProvisionDeployments
        case os
        case platform
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        name = try container.decode(.name)
        manuallyProvisionDeployments = try container.decodeIfPresent(.manuallyProvisionDeployments)
        os = try container.decodeIfPresent(.os)
        platform = try container.decodeIfPresent(.platform)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(manuallyProvisionDeployments, forKey: .manuallyProvisionDeployments)
        try container.encodeIfPresent(os, forKey: .os)
        try container.encodeIfPresent(platform, forKey: .platform)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? LegacyCodePushApp else { return false }
      guard self.name == object.name else { return false }
      guard self.manuallyProvisionDeployments == object.manuallyProvisionDeployments else { return false }
      guard self.os == object.os else { return false }
      guard self.platform == object.platform else { return false }
      return true
    }

    public static func == (lhs: LegacyCodePushApp, rhs: LegacyCodePushApp) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
