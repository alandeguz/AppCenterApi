//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class UserEmailOrgRoleRequest: APIModel {

    /** The user's role */
    public enum Role: String, Codable {
        case admin = "admin"
        case collaborator = "collaborator"
        case member = "member"

        public static let cases: [Role] = [
          .admin,
          .collaborator,
          .member,
        ]
    }

    /** The user's email address */
    public var userEmail: String

    /** The user's role */
    public var role: Role?

    public init(userEmail: String, role: Role? = nil) {
        self.userEmail = userEmail
        self.role = role
    }

    private enum CodingKeys: String, CodingKey {
        case userEmail = "user_email"
        case role
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        userEmail = try container.decode(.userEmail)
        role = try container.decodeIfPresent(.role)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(userEmail, forKey: .userEmail)
        try container.encodeIfPresent(role, forKey: .role)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? UserEmailOrgRoleRequest else { return false }
      guard self.userEmail == object.userEmail else { return false }
      guard self.role == object.role else { return false }
      return true
    }

    public static func == (lhs: UserEmailOrgRoleRequest, rhs: UserEmailOrgRoleRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
