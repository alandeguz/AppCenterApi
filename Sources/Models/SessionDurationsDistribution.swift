//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class SessionDurationsDistribution: APIModel {

    /** The average session duration for current time range. */
    public var averageDuration: String?

    /** The count of sessions in these buckets. */
    public var distribution: [Distribution]?

    /** The previous average session duration for previous time range. */
    public var previousAverageDuration: String?

    public init(averageDuration: String? = nil, distribution: [Distribution]? = nil, previousAverageDuration: String? = nil) {
        self.averageDuration = averageDuration
        self.distribution = distribution
        self.previousAverageDuration = previousAverageDuration
    }

    private enum CodingKeys: String, CodingKey {
        case averageDuration = "average_duration"
        case distribution
        case previousAverageDuration = "previous_average_duration"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        averageDuration = try container.decodeIfPresent(.averageDuration)
        distribution = try container.decodeArrayIfPresent(.distribution)
        previousAverageDuration = try container.decodeIfPresent(.previousAverageDuration)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(averageDuration, forKey: .averageDuration)
        try container.encodeIfPresent(distribution, forKey: .distribution)
        try container.encodeIfPresent(previousAverageDuration, forKey: .previousAverageDuration)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? SessionDurationsDistribution else { return false }
      guard self.averageDuration == object.averageDuration else { return false }
      guard self.distribution == object.distribution else { return false }
      guard self.previousAverageDuration == object.previousAverageDuration else { return false }
      return true
    }

    public static func == (lhs: SessionDurationsDistribution, rhs: SessionDurationsDistribution) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
