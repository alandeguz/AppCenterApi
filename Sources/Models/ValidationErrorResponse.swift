//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ValidationErrorResponse: APIModel {

    public var id: String

    public var code: String

    public var message: String

    public init(id: String, code: String, message: String) {
        self.id = id
        self.code = code
        self.message = message
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case code
        case message
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        id = try container.decode(.id)
        code = try container.decode(.code)
        message = try container.decode(.message)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(id, forKey: .id)
        try container.encode(code, forKey: .code)
        try container.encode(message, forKey: .message)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ValidationErrorResponse else { return false }
      guard self.id == object.id else { return false }
      guard self.code == object.code else { return false }
      guard self.message == object.message else { return false }
      return true
    }

    public static func == (lhs: ValidationErrorResponse, rhs: ValidationErrorResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
