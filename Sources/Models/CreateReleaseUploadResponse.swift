//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class CreateReleaseUploadResponse: APIModel {

    /** The ID for the newly created upload. It is going to be required later in the process. */
    public var id: ID

    /** The URL domain used to upload the release. */
    public var uploadDomain: String

    /** The URL encoded token used for upload permissions. */
    public var token: String

    /** The associated asset ID in the file management service associated with this uploaded. */
    public var packageAssetId: ID

    public init(id: ID, uploadDomain: String, token: String, packageAssetId: ID) {
        self.id = id
        self.uploadDomain = uploadDomain
        self.token = token
        self.packageAssetId = packageAssetId
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case uploadDomain = "upload_domain"
        case token
        case packageAssetId = "package_asset_id"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        id = try container.decode(.id)
        uploadDomain = try container.decode(.uploadDomain)
        token = try container.decode(.token)
        packageAssetId = try container.decode(.packageAssetId)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(id, forKey: .id)
        try container.encode(uploadDomain, forKey: .uploadDomain)
        try container.encode(token, forKey: .token)
        try container.encode(packageAssetId, forKey: .packageAssetId)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? CreateReleaseUploadResponse else { return false }
      guard self.id == object.id else { return false }
      guard self.uploadDomain == object.uploadDomain else { return false }
      guard self.token == object.token else { return false }
      guard self.packageAssetId == object.packageAssetId else { return false }
      return true
    }

    public static func == (lhs: CreateReleaseUploadResponse, rhs: CreateReleaseUploadResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
