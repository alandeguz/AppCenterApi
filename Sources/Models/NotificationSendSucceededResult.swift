//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Notification send succeeded. */
public class NotificationSendSucceededResult: APIModel {

    /** The unique notification identifier. */
    public var notificationId: String

    public init(notificationId: String) {
        self.notificationId = notificationId
    }

    private enum CodingKeys: String, CodingKey {
        case notificationId = "notification_id"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        notificationId = try container.decode(.notificationId)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(notificationId, forKey: .notificationId)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? NotificationSendSucceededResult else { return false }
      guard self.notificationId == object.notificationId else { return false }
      return true
    }

    public static func == (lhs: NotificationSendSucceededResult, rhs: NotificationSendSucceededResult) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
