//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class CrashGroupsContainer: APIModel {

    public var limitedResultSet: Bool

    public var crashGroups: [CrashGroups]

    /** Cassandra request continuation token. The token is used for pagination. */
    public var continuationToken: String?

    public init(limitedResultSet: Bool, crashGroups: [CrashGroups], continuationToken: String? = nil) {
        self.limitedResultSet = limitedResultSet
        self.crashGroups = crashGroups
        self.continuationToken = continuationToken
    }

    private enum CodingKeys: String, CodingKey {
        case limitedResultSet = "limited_result_set"
        case crashGroups = "crash_groups"
        case continuationToken = "continuation_token"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        limitedResultSet = try container.decode(.limitedResultSet)
        crashGroups = try container.decodeArray(.crashGroups)
        continuationToken = try container.decodeIfPresent(.continuationToken)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(limitedResultSet, forKey: .limitedResultSet)
        try container.encode(crashGroups, forKey: .crashGroups)
        try container.encodeIfPresent(continuationToken, forKey: .continuationToken)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? CrashGroupsContainer else { return false }
      guard self.limitedResultSet == object.limitedResultSet else { return false }
      guard self.crashGroups == object.crashGroups else { return false }
      guard self.continuationToken == object.continuationToken else { return false }
      return true
    }

    public static func == (lhs: CrashGroupsContainer, rhs: CrashGroupsContainer) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
