//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class OptimizelyUserMetaDataResponse: APIModel {

    public var metadata: [String: Any]?

    public var userId: String?

    public init(metadata: [String: Any]? = nil, userId: String? = nil) {
        self.metadata = metadata
        self.userId = userId
    }

    private enum CodingKeys: String, CodingKey {
        case metadata
        case userId
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        metadata = try container.decodeAnyIfPresent(.metadata)
        userId = try container.decodeIfPresent(.userId)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeAnyIfPresent(metadata, forKey: .metadata)
        try container.encodeIfPresent(userId, forKey: .userId)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? OptimizelyUserMetaDataResponse else { return false }
      guard NSDictionary(dictionary: self.metadata ?? [:]).isEqual(to: object.metadata ?? [:]) else { return false }
      guard self.userId == object.userId else { return false }
      return true
    }

    public static func == (lhs: OptimizelyUserMetaDataResponse, rhs: OptimizelyUserMetaDataResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
