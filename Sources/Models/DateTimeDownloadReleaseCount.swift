//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class DateTimeDownloadReleaseCount: APIModel {

    /** The ISO 8601 datetime. */
    public var datetime: String?

    public var total: Int?

    public var unique: Int?

    public init(datetime: String? = nil, total: Int? = nil, unique: Int? = nil) {
        self.datetime = datetime
        self.total = total
        self.unique = unique
    }

    private enum CodingKeys: String, CodingKey {
        case datetime
        case total
        case unique
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        datetime = try container.decodeIfPresent(.datetime)
        total = try container.decodeIfPresent(.total)
        unique = try container.decodeIfPresent(.unique)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(datetime, forKey: .datetime)
        try container.encodeIfPresent(total, forKey: .total)
        try container.encodeIfPresent(unique, forKey: .unique)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? DateTimeDownloadReleaseCount else { return false }
      guard self.datetime == object.datetime else { return false }
      guard self.total == object.total else { return false }
      guard self.unique == object.unique else { return false }
      return true
    }

    public static func == (lhs: DateTimeDownloadReleaseCount, rhs: DateTimeDownloadReleaseCount) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
