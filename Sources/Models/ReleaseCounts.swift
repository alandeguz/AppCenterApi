//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ReleaseCounts: APIModel {

    public var counts: [Counts]

    public var total: Int?

    public init(counts: [Counts], total: Int? = nil) {
        self.counts = counts
        self.total = total
    }

    private enum CodingKeys: String, CodingKey {
        case counts
        case total
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        counts = try container.decodeArray(.counts)
        total = try container.decodeIfPresent(.total)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(counts, forKey: .counts)
        try container.encodeIfPresent(total, forKey: .total)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ReleaseCounts else { return false }
      guard self.counts == object.counts else { return false }
      guard self.total == object.total else { return false }
      return true
    }

    public static func == (lhs: ReleaseCounts, rhs: ReleaseCounts) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
