//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** A request containing a set of release ids to validate */
public class GDPRValidationRequest: APIModel {

    /** a list of release ids to validate (AC flow) */
    public var releaseIds: [Int]

    /** a list of release ids to validate (HA flow) */
    public var hockeyappReleaseIds: [Int]?

    /** a list of release uploads ids to validate */
    public var releaseUploadIds: [String]?

    public init(releaseIds: [Int], hockeyappReleaseIds: [Int]? = nil, releaseUploadIds: [String]? = nil) {
        self.releaseIds = releaseIds
        self.hockeyappReleaseIds = hockeyappReleaseIds
        self.releaseUploadIds = releaseUploadIds
    }

    private enum CodingKeys: String, CodingKey {
        case releaseIds = "release_ids"
        case hockeyappReleaseIds = "hockeyapp_release_ids"
        case releaseUploadIds = "release_upload_ids"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        releaseIds = try container.decodeArray(.releaseIds)
        hockeyappReleaseIds = try container.decodeArrayIfPresent(.hockeyappReleaseIds)
        releaseUploadIds = try container.decodeArrayIfPresent(.releaseUploadIds)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(releaseIds, forKey: .releaseIds)
        try container.encodeIfPresent(hockeyappReleaseIds, forKey: .hockeyappReleaseIds)
        try container.encodeIfPresent(releaseUploadIds, forKey: .releaseUploadIds)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? GDPRValidationRequest else { return false }
      guard self.releaseIds == object.releaseIds else { return false }
      guard self.hockeyappReleaseIds == object.hockeyappReleaseIds else { return false }
      guard self.releaseUploadIds == object.releaseUploadIds else { return false }
      return true
    }

    public static func == (lhs: GDPRValidationRequest, rhs: GDPRValidationRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
