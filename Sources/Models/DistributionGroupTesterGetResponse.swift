//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class DistributionGroupTesterGetResponse: APIModel {

    /** The unique name that is used to identify the tester. */
    public var name: String

    /** The email address of the tester */
    public var email: String

    /** The full name of the tester. Might for example be first and last name */
    public var displayName: String?

    public init(name: String, email: String, displayName: String? = nil) {
        self.name = name
        self.email = email
        self.displayName = displayName
    }

    private enum CodingKeys: String, CodingKey {
        case name
        case email
        case displayName = "display_name"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        name = try container.decode(.name)
        email = try container.decode(.email)
        displayName = try container.decodeIfPresent(.displayName)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(name, forKey: .name)
        try container.encode(email, forKey: .email)
        try container.encodeIfPresent(displayName, forKey: .displayName)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? DistributionGroupTesterGetResponse else { return false }
      guard self.name == object.name else { return false }
      guard self.email == object.email else { return false }
      guard self.displayName == object.displayName else { return false }
      return true
    }

    public static func == (lhs: DistributionGroupTesterGetResponse, rhs: DistributionGroupTesterGetResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
