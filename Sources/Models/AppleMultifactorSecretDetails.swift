//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Apple secret details */
public class AppleMultifactorSecretDetails: APIModel {

    /** username to connect to apple store. */
    public var username: String

    /** password to connect to apple store. */
    public var password: String

    /** The 6 digit Apple OTP for Multifactor accounts */
    public var authCode: String

    /** The app specific password required for app publishing for 2FA accounts */
    public var appSpecificPassword: String?

    public init(username: String, password: String, authCode: String, appSpecificPassword: String? = nil) {
        self.username = username
        self.password = password
        self.authCode = authCode
        self.appSpecificPassword = appSpecificPassword
    }

    private enum CodingKeys: String, CodingKey {
        case username
        case password
        case authCode
        case appSpecificPassword
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        username = try container.decode(.username)
        password = try container.decode(.password)
        authCode = try container.decode(.authCode)
        appSpecificPassword = try container.decodeIfPresent(.appSpecificPassword)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(username, forKey: .username)
        try container.encode(password, forKey: .password)
        try container.encode(authCode, forKey: .authCode)
        try container.encodeIfPresent(appSpecificPassword, forKey: .appSpecificPassword)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? AppleMultifactorSecretDetails else { return false }
      guard self.username == object.username else { return false }
      guard self.password == object.password else { return false }
      guard self.authCode == object.authCode else { return false }
      guard self.appSpecificPassword == object.appSpecificPassword else { return false }
      return true
    }

    public static func == (lhs: AppleMultifactorSecretDetails, rhs: AppleMultifactorSecretDetails) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
