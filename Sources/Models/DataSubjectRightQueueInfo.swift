//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class DataSubjectRightQueueInfo: APIModel {

    public var sasUri: URL

    public var queueName: String

    public var expiresAt: DateTime

    public init(sasUri: URL, queueName: String, expiresAt: DateTime) {
        self.sasUri = sasUri
        self.queueName = queueName
        self.expiresAt = expiresAt
    }

    private enum CodingKeys: String, CodingKey {
        case sasUri
        case queueName
        case expiresAt
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        sasUri = try container.decode(.sasUri)
        queueName = try container.decode(.queueName)
        expiresAt = try container.decode(.expiresAt)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(sasUri, forKey: .sasUri)
        try container.encode(queueName, forKey: .queueName)
        try container.encode(expiresAt, forKey: .expiresAt)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? DataSubjectRightQueueInfo else { return false }
      guard self.sasUri == object.sasUri else { return false }
      guard self.queueName == object.queueName else { return false }
      guard self.expiresAt == object.expiresAt else { return false }
      return true
    }

    public static func == (lhs: DataSubjectRightQueueInfo, rhs: DataSubjectRightQueueInfo) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
