//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ErrorGroupModel: APIModel {

    /** count of errors in a model */
    public var errorCount: Int?

    /** model code */
    public var modelCode: String?

    /** model name */
    public var modelName: String?

    public init(errorCount: Int? = nil, modelCode: String? = nil, modelName: String? = nil) {
        self.errorCount = errorCount
        self.modelCode = modelCode
        self.modelName = modelName
    }

    private enum CodingKeys: String, CodingKey {
        case errorCount
        case modelCode
        case modelName
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        errorCount = try container.decodeIfPresent(.errorCount)
        modelCode = try container.decodeIfPresent(.modelCode)
        modelName = try container.decodeIfPresent(.modelName)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(errorCount, forKey: .errorCount)
        try container.encodeIfPresent(modelCode, forKey: .modelCode)
        try container.encodeIfPresent(modelName, forKey: .modelName)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ErrorGroupModel else { return false }
      guard self.errorCount == object.errorCount else { return false }
      guard self.modelCode == object.modelCode else { return false }
      guard self.modelName == object.modelName else { return false }
      return true
    }

    public static func == (lhs: ErrorGroupModel, rhs: ErrorGroupModel) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
