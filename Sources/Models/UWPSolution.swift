//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class UWPSolution: APIModel {

    /** The path to the UWP solution */
    public var path: String

    /** The possible configurations detected for the UWP solution */
    public var configurations: [String]

    public init(path: String, configurations: [String]) {
        self.path = path
        self.configurations = configurations
    }

    private enum CodingKeys: String, CodingKey {
        case path
        case configurations
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        path = try container.decode(.path)
        configurations = try container.decodeArray(.configurations)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(path, forKey: .path)
        try container.encode(configurations, forKey: .configurations)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? UWPSolution else { return false }
      guard self.path == object.path else { return false }
      guard self.configurations == object.configurations else { return false }
      return true
    }

    public static func == (lhs: UWPSolution, rhs: UWPSolution) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
