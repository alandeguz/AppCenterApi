//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** ... */
public class DeviceAvailability: APIModel {

    public var registered: Double

    public var available: Double

    public var maximum: Double

    public init(registered: Double, available: Double, maximum: Double) {
        self.registered = registered
        self.available = available
        self.maximum = maximum
    }

    private enum CodingKeys: String, CodingKey {
        case registered
        case available
        case maximum
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        registered = try container.decode(.registered)
        available = try container.decode(.available)
        maximum = try container.decode(.maximum)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encode(registered, forKey: .registered)
        try container.encode(available, forKey: .available)
        try container.encode(maximum, forKey: .maximum)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? DeviceAvailability else { return false }
      guard self.registered == object.registered else { return false }
      guard self.available == object.available else { return false }
      guard self.maximum == object.maximum else { return false }
      return true
    }

    public static func == (lhs: DeviceAvailability, rhs: DeviceAvailability) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
