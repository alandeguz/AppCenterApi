//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Result of starting a test run */
public class TestCloudStartTestRunResult: APIModel {

    /** List with names of accepted devices */
    public var acceptedDevices: [String]?

    /** List with names and descriptions of rejected devices */
    public var rejectedDevices: [String]?

    public init(acceptedDevices: [String]? = nil, rejectedDevices: [String]? = nil) {
        self.acceptedDevices = acceptedDevices
        self.rejectedDevices = rejectedDevices
    }

    private enum CodingKeys: String, CodingKey {
        case acceptedDevices = "accepted_devices"
        case rejectedDevices = "rejected_devices"
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        acceptedDevices = try container.decodeArrayIfPresent(.acceptedDevices)
        rejectedDevices = try container.decodeArrayIfPresent(.rejectedDevices)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(acceptedDevices, forKey: .acceptedDevices)
        try container.encodeIfPresent(rejectedDevices, forKey: .rejectedDevices)
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? TestCloudStartTestRunResult else { return false }
      guard self.acceptedDevices == object.acceptedDevices else { return false }
      guard self.rejectedDevices == object.rejectedDevices else { return false }
      return true
    }

    public static func == (lhs: TestCloudStartTestRunResult, rhs: TestCloudStartTestRunResult) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
